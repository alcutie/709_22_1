drop table if exists conferences, performances;

create table conferences
(
    id int primary key generated by default as identity,
    name text,
    date_conference date,
    address text
);

create table performances
(
    id int primary key generated by default as identity,
    id_conference int references conferences(id),
    name text,
    date_performance date,
    topic text
);

insert into conferences (name, date_conference, address)
values
    ('Концференция 1', '2024.03.18', 'ул. Морских Фонарей 225'),
    ('Концференция 2', '2024.02.28', 'ул Бейкер Стрит 22Б'),
    ('Концференция 3', '2024.04.13', 'ул Нарциссов 334');

insert into performances (id_conference, name, date_performance, topic)
values
    (1, 'Выступление 1', '2024.02.28', 'ул Морских Фонарей'),
    (1, 'Выступление 2', '2024.03.18', 'ул Вечных Дождей'),
    (3, 'Выступление 3', '2024.04.13', 'ул Нарциссов');

select
    con.id,
    con.name,
    con.date_conference,
    con.address,
    coalesce(json_agg(json_build_object('name', per.name, 'date_performance', per.date_performance, 'topic', per.topic))
             filter (where per.id is not null), '[]') as perf

from conferences as con
         left join performances per on con.id = per.id_conference
group by con.id;



